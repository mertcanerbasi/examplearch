name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      #Check Java version
      - name: Check Java version
        run: java -version

      # Set up Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Recreate the my-release-key.jks file from the base64 secret
      - name: Recreate my-release-key.jks
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > $HOME/my-release-key.jks

      # Set environment variables for keystore
      - name: Set environment variables for keystore
        run: |
          echo "ANDROID_KEYSTORE_PATH=$HOME/my-release-key.jks" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_ALIAS=${{ secrets.ANDROID_KEYSTORE_ALIAS }}" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV


      # Install Android SDK and dependencies
      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar unzip
          
          # Download command-line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip
          
          # Create the cmdline-tools folder structure
          mkdir -p $HOME/Android/cmdline-tools
          
          # Unzip into a temporary folder
          unzip commandlinetools.zip -d $HOME/Android/cmdline-tools/temp
          
          # Move the unzipped content into the 'latest' folder
          mv $HOME/Android/cmdline-tools/temp/cmdline-tools $HOME/Android/cmdline-tools/latest
          
          # Clean up the temporary folder
          rm -rf $HOME/Android/cmdline-tools/temp
          
          # Set environment variables for Android SDK
          export ANDROID_HOME=$HOME/Android
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          
          # Install required SDK components
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "platforms;android-33" "build-tools;33.0.0"

      # Accept Android SDK licenses
      - name: Accept Android SDK Licenses
        run: yes | $HOME/Android/cmdline-tools/latest/bin/sdkmanager --licenses

      # Verify Flutter and Android SDK versions
      - name: Verify Flutter & Android Setup
        run: |
          flutter --version
          flutter doctor

      # Install Flutter dependencies
      - name: Install Flutter Dependencies
        run: flutter pub get

      # Generate code using build_runner
      - name: Build Runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # Build the APK or AppBundle
      - name: Build AppBundle
        run: flutter build appbundle --flavor development --target lib/main_development.dart

      # Optional: Upload artifact (APK or AAB)
      - name: Upload AAB
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab
